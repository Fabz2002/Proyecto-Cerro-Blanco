---
interface Item {
	nombre: string
	href?: string
}
export interface Props {
	items: Item[]
}

const { items } = Astro.props
---

<nav class="dashboard__navbar">
	<div class="navbar__logo">
		<a href="./" class="logo__a"
			><img
				class="logo__img"
				src="./mainLogo.png"
				style="max-width: 100px"
			/></a
		>
	</div>
	<ul class="navbar__optionsMenu">
		{
			items.map((item) => {
				return (
					<li class="navbar__items-Menu">
						<a href={item.href}>{item.nombre}</a>
					</li>
				)
			})
		}
	</ul>
	<ul class="navbar__options">
		<li id="darkTheme-btn" class="navbar__darkTheme-btn">
			<a
				><svg
					class="item__svg"
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 384 512"
					style="width: 15px"
				>
					<path
						class="pat"
						d="M223.5 32C100 32 0 132.3 0 256S100 480 223.5 480c60.6 0 115.5-24.2 155.8-63.4c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-9.8 1.7-19.8 2.6-30.1 2.6c-96.9 0-175.5-78.8-175.5-176c0-65.8 36-123.1 89.3-153.3c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-6.3-.5-12.6-.8-19-.8z"
					></path></svg
				></a
			>
		</li>
		<li class="navbar__responsive-btn">
			<span class="navbar__bar"></span>
			<span class="navbar__bar"></span>
			<span class="navbar__bar"></span>
		</li>
	</ul>
</nav>

<script>
	const d = document,
		ls = localStorage
	const $hamburguer = d.querySelectorAll('.navbar__bar')
	const $disfrutaP = d.querySelectorAll('.disfruta__p')
	const $ThemeBtn = d.querySelector('#darkTheme-btn') as HTMLInputElement
	const $darkBtn = d.querySelector('.navbar__darkTheme-btn') as HTMLInputElement
	const $logo = d.querySelectorAll('.logo__img')
	const $selectors = d.querySelectorAll('[data-dark]')
	const $selectorNavBar = d.querySelector(
		'.dashboard__navbar'
	) as HTMLInputElement
	let moon = `<a class="moon" 
  ><svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 384 512"
    style="width: 10px;cursor:pointer"
  >
    <path
      d="M223.5 32C100 32 0 132.3 0 256S100 480 223.5 480c60.6 0 115.5-24.2 155.8-63.4c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-9.8 1.7-19.8 2.6-30.1 2.6c-96.9 0-175.5-78.8-175.5-176c0-65.8 36-123.1 89.3-153.3c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-6.3-.5-12.6-.8-19-.8z"
    /></svg
></a>`,
		sun = `<a class="ligh"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" style="width:15px;filter: invert(100%);cursor:pointer"><path d="M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM352 256c0 53-43 96-96 96s-96-43-96-96s43-96 96-96s96 43 96 96zm32 0c0-70.7-57.3-128-128-128s-128 57.3-128 128s57.3 128 128 128s128-57.3 128-128z"/></svg></a>`

	const lightMode = () => {
		console.log('light')
		$selectors.forEach((el) => el.classList.remove('dark-mode'))
		$selectorNavBar.classList.remove('dark-navBar')
		$hamburguer.forEach((el) => el.classList.remove('dark-hamburguer'))
		$disfrutaP.forEach((el) => el.classList.remove('dark-disfrutaP'))
		$ThemeBtn.innerHTML = moon
		$logo.forEach((el) => {
			el.setAttribute('src', './mainLogo.png'),
				el.setAttribute('style', 'max-width:100px')
		})

		ls.setItem('theme', 'light')
	}
	const darkMode = () => {
		console.log('dark')
		$selectors.forEach((el) => el.classList.add('dark-mode'))
		$selectorNavBar.classList.add('dark-navBar')
		$hamburguer.forEach((el) => el.classList.add('dark-hamburguer'))
		$disfrutaP.forEach((el) => el.classList.add('dark-disfrutaP'))
		$ThemeBtn.innerHTML = sun
		$logo.forEach((el) => {
			el.setAttribute('src', './mainLogoDark.png')
			el.setAttribute('style', 'max-width:108px')
		})

		ls.setItem('theme', 'dark')
	}

	$darkBtn.addEventListener('click', (e) => {
		let them = $ThemeBtn.innerHTML
		console.log($logo)
		if (them.substring(10, 14) === 'moon') {
			darkMode()
		} else {
			lightMode()
		}
	})

	d.addEventListener('DOMContentLoaded', (e) => {
		if (ls.getItem('theme') == null) {
			ls.setItem('theme', 'light')
		}
		if (ls.getItem('theme') === 'light') {
			lightMode()
		}
		if (ls.getItem('theme') === 'dark') {
			darkMode()
		}
	})
	const $responsiveBtn = d.querySelector(
		'.navbar__responsive-btn'
	) as HTMLInputElement
	const $navMenu = d.querySelector('.navbar__optionsMenu') as HTMLInputElement
	$responsiveBtn.addEventListener('click', () => {
		$responsiveBtn.classList.toggle('active')
		$navMenu.classList.toggle('active')
	})
	d.querySelectorAll('.navbar__items-Menu').forEach((n) =>
		n.addEventListener('click', () => {
			$responsiveBtn.classList.remove('active')
			$navMenu.classList.remove('active')
		})
	)
</script>
